{
  "spec_version": "1.0",
  "metadata": {
    "id": "unifi-network-application-mongo-4",
    "name": "Unifi Network Application",
    "description": "Supports Zimaboards and PI's. The Unifi-network-application software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.",
    "tagline": "The Unifi-network-application MongoDB 4",
    "version": "9.5.21",
    "author": "BigBearTechWorld",
    "developer": "Ubiquiti",
    "category": "BigBearCasaOS",
    "license": "",
    "homepage": "",
    "source": "big-bear-universal",
    "created": "2025-10-27T02:42:23Z",
    "updated": "2025-10-27T02:42:23Z"
  },
  "visual": {
    "icon": "https://cdn.jsdelivr.net/gh/selfhst/icons/png/ubiquiti-unifi.png",
    "thumbnail": "",
    "screenshots": [],
    "logo": "https://cdn.jsdelivr.net/gh/selfhst/icons/png/ubiquiti-unifi.png"
  },
  "resources": {
    "youtube": "https://youtu.be/JCe-r_SHCe8",
    "documentation": "",
    "repository": "",
    "issues": "",
    "support": "https://community.bigbeartechworld.com/"
  },
  "technical": {
    "architectures": [
      "amd64",
      "arm64"
    ],
    "platform": "linux",
    "main_service": "app",
    "default_port": "8443",
    "main_image": "linuxserver/unifi-network-application",
    "compose_file": "docker-compose.yml"
  },
  "deployment": {
    "environment_variables": [
      {
        "name": "PUID",
        "default": "",
        "description": "User ID",
        "required": false
      },
      {
        "name": "PGID",
        "default": "",
        "description": "Group ID",
        "required": false
      },
      {
        "name": "TZ",
        "default": "",
        "description": "Timezone",
        "required": false
      },
      {
        "name": "MONGO_HOST",
        "default": "",
        "description": "MongoDB host",
        "required": false
      },
      {
        "name": "MONGO_USER",
        "default": "",
        "description": "MongoDB username",
        "required": false
      },
      {
        "name": "MONGO_PASS",
        "default": "",
        "description": "MongoDB password",
        "required": false
      },
      {
        "name": "MONGO_PORT",
        "default": "",
        "description": "MongoDB port",
        "required": false
      },
      {
        "name": "MONGO_DBNAME",
        "default": "",
        "description": "MongoDB database name",
        "required": false
      },
      {
        "name": "MEM_LIMIT",
        "default": "",
        "description": "Memory limit for the container",
        "required": false
      },
      {
        "name": "MEM_STARTUP",
        "default": "",
        "description": "Memory to allocate on container startup",
        "required": false
      },
      {
        "name": "MONGO_TLS",
        "default": "",
        "description": "MongoDB TLS setting",
        "required": false
      },
      {
        "name": "MONGO_AUTHSOURCE",
        "default": "",
        "description": "MongoDB authentication source",
        "required": false
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "description": "Container Path: /config"
      }
    ],
    "ports": [
      {
        "container": "8443",
        "host": "8443",
        "protocol": "tcp",
        "description": "Container Port: 8443"
      },
      {
        "container": "3478/udp",
        "host": "3478/udp",
        "protocol": "tcp",
        "description": "Container Port: 3478/udp"
      },
      {
        "container": "10001/udp",
        "host": "10001/udp",
        "protocol": "tcp",
        "description": "Container Port: 10001/udp"
      },
      {
        "container": "8080",
        "host": "8080",
        "protocol": "tcp",
        "description": "Container Port: 8080"
      },
      {
        "container": "1900/udp",
        "host": "1900/udp",
        "protocol": "tcp",
        "description": "Container Port: 1900/udp"
      },
      {
        "container": "8843",
        "host": "8843",
        "protocol": "tcp",
        "description": "Container Port: 8843"
      },
      {
        "container": "8880",
        "host": "8880",
        "protocol": "tcp",
        "description": "Container Port: 8880"
      },
      {
        "container": "6789",
        "host": "6789",
        "protocol": "tcp",
        "description": "Container Port: 6789"
      },
      {
        "container": "5514/udp",
        "host": "5514/udp",
        "protocol": "tcp",
        "description": "Container Port: 5514/udp"
      }
    ]
  },
  "ui": {
    "scheme": "http",
    "path": "",
    "tips": {
      "before_install": {
        "en_us": "Read this before installing: https://community.bigbeartechworld.com/t/added-unifi-network-application-to-bigbearcasaos/487\n"
      }
    }
  },
  "compatibility": {
    "casaos": {
      "supported": true,
      "port_map": "8443",
      "volume_mappings": {
        "unifi-network-application-mongo-4_config": "/DATA/AppData/$AppID/config",
        "unifi-network-application-mongo-4_db_data": "/DATA/AppData/$AppID/db/data"
      },
      "port": "8443"
    },
    "portainer": {
      "supported": true,
      "template_type": 2,
      "categories": [
        "BigBearCasaOS",
        "selfhosted"
      ],
      "administrator_only": false,
      "port": "27017\n8443"
    },
    "runtipi": {
      "supported": true,
      "tipi_version": 1,
      "supported_architectures": [
        "amd64",
        "arm64"
      ],
      "volume_mappings": {
        "unifi-network-application-mongo-4_config": "config",
        "unifi-network-application-mongo-4_db_data": "db/data"
      },
      "port": "8447"
    },
    "dockge": {
      "supported": true,
      "file_based": true,
      "port": "27017\n8443"
    },
    "cosmos": {
      "supported": true,
      "servapp": true,
      "routes_required": true,
      "port": "27017\n8443"
    },
    "umbrel": {
      "supported": true,
      "manifest_version": 1,
      "volume_mappings": {
        "unifi-network-application-mongo-4_config": "config",
        "unifi-network-application-mongo-4_db_data": "db/data"
      },
      "port": "27018"
    }
  },
  "tags": [
    "selfhosted",
    "docker",
    "bigbear",
    "bigbearcasaos",
    "container"
  ]
}
